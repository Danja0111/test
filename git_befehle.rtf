{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Git-Befehle:\
\
1. `git init`  \
   Initialisiert ein neues Git-Repository im aktuellen Verzeichnis.\
\
2. `git clone <repository-url>`  \
   Klont ein bestehendes Repository von einer angegebenen URL auf deinen lokalen Rechner.\
\
3. `git status`  \
   Zeigt den aktuellen Status des Arbeitsverzeichnisses und der Staging Area an, z. B. welche \'c4nderungen zur \'dcbernahme bereitstehen.\
\
4. `git add <datei>`  \
   F\'fcgt eine Datei zur Staging Area hinzu (bereitet sie auf den Commit vor).\
\
5. `git commit -m "Nachricht"`  \
   Erstellt einen neuen Commit mit den Dateien in der Staging Area und einer Commit-Nachricht.\
\
6. `git push`  \
   \'dcbertr\'e4gt die lokalen Repository-\'c4nderungen zu einem Remote-Repository.\
\
7. `git pull`  \
   Holt die \'c4nderungen vom Remote-Repository und integriert sie in das lokale Repository.\
\
8. `git fetch`  \
   Holt die \'c4nderungen vom Remote-Repository, integriert sie aber nicht automatisch in das lokale Repository.\
\
9. `git merge <branch>`  \
   Integriert die \'c4nderungen von einem bestimmten Branch in den aktuellen Branch.\
\
10. `git branch`  \
    Listet alle lokalen Branches auf oder erstellt/l\'f6scht Branches je nach Verwendung von Zusatzoptionen.\
\
11. `git checkout <branch/tag/commit>`  \
    Wechselt zu einem bestimmten Branch oder bringt das Arbeitsverzeichnis zu einem bestimmten Commit oder Tag.\
\
12. `git log`  \
    Zeigt die Commit-Historie an.\
\
13. `git diff`  \
    Zeigt die Unterschiede zwischen Dateien im Arbeitsverzeichnis und Commits an.\
\
14. `git reset <datei>`  \
    Entfernt eine Datei aus der Staging Area (macht `git add` r\'fcckg\'e4ngig).\
\
15. `git stash`  \
    Speichert aktuelle \'c4nderungen tempor\'e4r, um zu einem sauberen Arbeitszustand zur\'fcckzukehren.\
\
16. `git stash apply`  \
    Wendet die zuletzt zwischengespeicherten \'c4nderungen wieder an.\
\
17. `git remote`  \
    Verwalte die Verbindungen zu Remote-Repositories.\
\
18. `git remote add <name> <url>`  \
    F\'fcgt ein neues Remote-Repository mit einem speziellen Namen hinzu.}